Item sets:
S0{
	ident : • _ident
	fullIdent : • _fullIdent
	messageName : • _messageName
	enumName : • _enumName
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {_ident '.'} • _messageName
	messageType : ['.'] {• _ident '.'} _messageName
	messageType : [• '.'] {_ident '.'} _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	enumType : ['.'] {• _ident '.'} _enumName
	enumType : [• '.'] {_ident '.'} _enumName
	intLit : • _intLit
	strLit : • _strLit
	quote : ''' | • '"'
	quote : • ''' | '"'
	emptyStatement : • ';'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | • '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | ([• '-' | '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | • '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | ([• '-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	!comment : _line_comment | • _block_comment
	!comment : • _line_comment | _block_comment
	!whitespace : ' ' | '\t' | '\r' | • '\n'
	!whitespace : ' ' | '\t' | • '\r' | '\n'
	!whitespace : ' ' | • '\t' | '\r' | '\n'
	!whitespace : • ' ' | '\t' | '\r' | '\n'
	syntax : • 's' 'y' 'n' 't' 'a' 'x'
	= : • '='
	proto3 : • 'p' 'r' 'o' 't' 'o' '3'
	; : • ';'
	import : • 'i' 'm' 'p' 'o' 'r' 't'
	weak : • 'w' 'e' 'a' 'k'
	public : • 'p' 'u' 'b' 'l' 'i' 'c'
	package : • 'p' 'a' 'c' 'k' 'a' 'g' 'e'
	option : • 'o' 'p' 't' 'i' 'o' 'n'
	( : • '('
	) : • ')'
	. : • '.'
	double : • 'd' 'o' 'u' 'b' 'l' 'e'
	float : • 'f' 'l' 'o' 'a' 't'
	int32 : • 'i' 'n' 't' '3' '2'
	int64 : • 'i' 'n' 't' '6' '4'
	uint32 : • 'u' 'i' 'n' 't' '3' '2'
	uint64 : • 'u' 'i' 'n' 't' '6' '4'
	sint32 : • 's' 'i' 'n' 't' '3' '2'
	sint64 : • 's' 'i' 'n' 't' '6' '4'
	fixed32 : • 'f' 'i' 'x' 'e' 'd' '3' '2'
	fixed64 : • 'f' 'i' 'x' 'e' 'd' '6' '4'
	sfixed32 : • 's' 'f' 'i' 'x' 'e' 'd' '3' '2'
	sfixed64 : • 's' 'f' 'i' 'x' 'e' 'd' '6' '4'
	bool : • 'b' 'o' 'o' 'l'
	string : • 's' 't' 'r' 'i' 'n' 'g'
	bytes : • 'b' 'y' 't' 'e' 's'
	[ : • '['
	] : • ']'
	repeated : • 'r' 'e' 'p' 'e' 'a' 't' 'e' 'd'
	, : • ','
	oneof : • 'o' 'n' 'e' 'o' 'f'
	{ : • '{'
	} : • '}'
	map : • 'm' 'a' 'p'
	< : • '<'
	> : • '>'
	reserved : • 'r' 'e' 's' 'e' 'r' 'v' 'e' 'd'
	to : • 't' 'o'
	max : • 'm' 'a' 'x'
	enum : • 'e' 'n' 'u' 'm'
	message : • 'm' 'e' 's' 's' 'a' 'g' 'e'
	service : • 's' 'e' 'r' 'v' 'i' 'c' 'e'
	rpc : • 'r' 'p' 'c'
	returns : • 'r' 'e' 't' 'u' 'r' 'n' 's'
	stream : • 's' 't' 'r' 'e' 'a' 'm'
	_ident : • _letter {_letter | _decimalDigit | '_'}
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	_intLit : _decimalLit | _octalLit | • _hexLit
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_strLit : (''' {_charValue} ''') | (• '"' {_charValue} '"')
	_strLit : (• ''' {_charValue} ''') | ('"' {_charValue} '"')
	_boolLit : 't' 'r' 'u' 'e' | • 'f' 'a' 'l' 's' 'e'
	_boolLit : • 't' 'r' 'u' 'e' | 'f' 'a' 'l' 's' 'e'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | • 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | • 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | • '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_block_comment : • '/' '*' {. | '*'} '*' '/'
	_line_comment : '/' '/' {.} '\n' | • '#' {.} '\n'
	_line_comment : • '/' '/' {.} '\n' | '#' {.} '\n'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
	_hexLit : • '0' ('x' | 'X') _hexDigit {_hexDigit}
	_octalLit : • '0' {_octalDigit}
	_decimalLit : (•  '0'-'9') {_decimalDigit}
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['\t','\t'] -> S1
	['\n','\n'] -> S1
	['\r','\r'] -> S1
	[' ',' '] -> S1
	['"','"'] -> S2
	['#','#'] -> S3
	[''','''] -> S4
	['(','('] -> S5
	[')',')'] -> S6
	['+','+'] -> S7
	[',',','] -> S8
	['-','-'] -> S7
	['.','.'] -> S9
	['/','/'] -> S10
	['0','0'] -> S11
	['1','9'] -> S12
	[';',';'] -> S13
	['<','<'] -> S14
	['=','='] -> S15
	['>','>'] -> S16
	['A','Z'] -> S17
	['[','['] -> S18
	[']',']'] -> S19
	['a','a'] -> S17
	['b','b'] -> S20
	['c','c'] -> S17
	['d','d'] -> S21
	['e','e'] -> S22
	['f','f'] -> S23
	['g','h'] -> S17
	['i','i'] -> S24
	['j','l'] -> S17
	['m','m'] -> S25
	['n','n'] -> S26
	['o','o'] -> S27
	['p','p'] -> S28
	['q','q'] -> S17
	['r','r'] -> S29
	['s','s'] -> S30
	['t','t'] -> S31
	['u','u'] -> S32
	['v','v'] -> S17
	['w','w'] -> S33
	['x','z'] -> S17
	['{','{'] -> S34
	['}','}'] -> S35
Action: nil
Symbols classes: {['\t','\t'], ['\n','\n'], ['\r','\r'], [' ',' '], ['"','"'], ['#','#'], [''','''], ['(','('], [')',')'], ['+','+'], [',',','], ['-','-'], ['.','.'], ['/','/'], ['0','0'], ['1','9'], [';',';'], ['<','<'], ['=','='], ['>','>'], ['A','Z'], ['[','['], [']',']'], ['a','a'], ['b','b'], ['c','c'], ['d','d'], ['e','e'], ['f','f'], ['g','h'], ['i','i'], ['j','l'], ['m','m'], ['n','n'], ['o','o'], ['p','p'], ['q','q'], ['r','r'], ['s','s'], ['t','t'], ['u','u'], ['v','v'], ['w','w'], ['x','z'], ['{','{'], ['}','}']}

S1{
	!whitespace : (' ' | '\t' | '\r' | '\n') •
}
Transitions:
Action: Ignore("!whitespace")
Symbols classes: {}

S2{
	quote : (''' | '"') •
	_strLit : (''' {_charValue} ''') | ('"' {_charValue} • '"')
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	['"','"'] -> S36
	['\','\'] -> S37
Action: Accept("quote")
Symbols classes: {['"','"'], ['\','\']}

S3{
	_line_comment : '/' '/' {.} '\n' | '#' {.} • '\n'
	_line_comment : '/' '/' {.} '\n' | '#' {• .} '\n'
	!comment : • _line_comment | _block_comment
}
Transitions:
	['\n','\n'] -> S38
. -> S3
Action: nil
Symbols classes: {['\n','\n']}

S4{
	quote : (''' | '"') •
	_strLit : (''' {_charValue} • ''') | ('"' {_charValue} '"')
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	[''','''] -> S36
	['\','\'] -> S39
Action: Accept("quote")
Symbols classes: {[''','''], ['\','\']}

S5{
	( : '(' •
}
Transitions:
Action: Accept("(")
Symbols classes: {}

S6{
	) : ')' •
}
Transitions:
Action: Accept(")")
Symbols classes: {}

S7{
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | • 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | • 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | • '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_intLit : _decimalLit | _octalLit | • _hexLit
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_decimals : • _decimalDigit {_decimalDigit}
	_hexLit : • '0' ('x' | 'X') _hexDigit {_hexDigit}
	_octalLit : • '0' {_octalDigit}
	_decimalLit : (•  '0'-'9') {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['.','.'] -> S40
	['0','0'] -> S41
	['1','9'] -> S42
	['i','i'] -> S43
	['n','n'] -> S44
Action: nil
Symbols classes: {['.','.'], ['0','0'], ['1','9'], ['i','i'], ['n','n']}

S8{
	, : ',' •
}
Transitions:
Action: Accept(",")
Symbols classes: {}

S9{
	messageType : ['.'] {_ident '.'} • _messageName
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	enumType : ['.'] {• _ident '.'} _enumName
	. : '.' •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' • _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_messageName : • _ident
	_ident : • _letter {_letter | _decimalDigit | '_'}
	_enumName : • _ident
	_decimals : • _decimalDigit {_decimalDigit}
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S45
	['A','Z'] -> S46
	['a','z'] -> S46
Action: Accept(".")
Symbols classes: {['0','9'], ['A','Z'], ['a','z']}

S10{
	_block_comment : '/' • '*' {. | '*'} '*' '/'
	_line_comment : '/' • '/' {.} '\n' | '#' {.} '\n'
	!comment : _line_comment | • _block_comment
	!comment : • _line_comment | _block_comment
}
Transitions:
	['*','*'] -> S47
	['/','/'] -> S48
Action: nil
Symbols classes: {['*','*'], ['/','/']}

S11{
	_hexLit : '0' ('x' | • 'X') _hexDigit {_hexDigit}
	_hexLit : '0' (• 'x' | 'X') _hexDigit {_hexDigit}
	_octalLit : '0' {_octalDigit} •
	_octalLit : '0' {• _octalDigit}
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimalDigit :  '0'-'9' •
	_intLit : _decimalLit | _octalLit | • _hexLit
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	intLit : • _intLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	intLit : _intLit •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_octalDigit : •  '0'-'7'
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','7'] -> S50
	['8','9'] -> S12
	['E','E'] -> S51
	['X','X'] -> S52
	['e','e'] -> S51
	['x','x'] -> S52
Action: Accept("intLit")
Symbols classes: {['.','.'], ['0','7'], ['8','9'], ['E','E'], ['X','X'], ['e','e'], ['x','x']}

S12{
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimalDigit :  '0'-'9' •
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : • _decimalLit | _octalLit | _hexLit
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	intLit : _intLit •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	intLit : • _intLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','9'] -> S12
	['E','E'] -> S51
	['e','e'] -> S51
Action: Accept("intLit")
Symbols classes: {['.','.'], ['0','9'], ['E','E'], ['e','e']}

S13{
	emptyStatement : ';' •
	; : ';' •
}
Transitions:
Action: Accept(";")
Symbols classes: {}

S14{
	< : '<' •
}
Transitions:
Action: Accept("<")
Symbols classes: {}

S15{
	= : '=' •
}
Transitions:
Action: Accept("=")
Symbols classes: {}

S16{
	> : '>' •
}
Transitions:
Action: Accept(">")
Symbols classes: {}

S17{
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S18{
	[ : '[' •
}
Transitions:
Action: Accept("[")
Symbols classes: {}

S19{
	] : ']' •
}
Transitions:
Action: Accept("]")
Symbols classes: {}

S20{
	bool : 'b' • 'o' 'o' 'l'
	bytes : 'b' • 'y' 't' 'e' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S56
	['p','x'] -> S17
	['y','y'] -> S57
	['z','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','x'], ['y','y'], ['z','z']}

S21{
	double : 'd' • 'o' 'u' 'b' 'l' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S58
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S22{
	enum : 'e' • 'n' 'u' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S59
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S23{
	float : 'f' • 'l' 'o' 'a' 't'
	fixed32 : 'f' • 'i' 'x' 'e' 'd' '3' '2'
	fixed64 : 'f' • 'i' 'x' 'e' 'd' '6' '4'
	_boolLit : 't' 'r' 'u' 'e' | 'f' • 'a' 'l' 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S60
	['b','h'] -> S17
	['i','i'] -> S61
	['j','k'] -> S17
	['l','l'] -> S62
	['m','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','h'], ['i','i'], ['j','k'], ['l','l'], ['m','z']}

S24{
	import : 'i' • 'm' 'p' 'o' 'r' 't'
	int32 : 'i' • 'n' 't' '3' '2'
	int64 : 'i' • 'n' 't' '6' '4'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' • 'n' 'f' | 'n' 'a' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','l'] -> S17
	['m','m'] -> S63
	['n','n'] -> S64
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','l'], ['m','m'], ['n','n'], ['o','z']}

S25{
	map : 'm' • 'a' 'p'
	max : 'm' • 'a' 'x'
	message : 'm' • 'e' 's' 's' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S65
	['b','d'] -> S17
	['e','e'] -> S66
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','d'], ['e','e'], ['f','z']}

S26{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' • 'a' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S67
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S27{
	option : 'o' • 'p' 't' 'i' 'o' 'n'
	oneof : 'o' • 'n' 'e' 'o' 'f'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S68
	['o','o'] -> S17
	['p','p'] -> S69
	['q','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','o'], ['p','p'], ['q','z']}

S28{
	proto3 : 'p' • 'r' 'o' 't' 'o' '3'
	public : 'p' • 'u' 'b' 'l' 'i' 'c'
	package : 'p' • 'a' 'c' 'k' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S70
	['b','q'] -> S17
	['r','r'] -> S71
	['s','t'] -> S17
	['u','u'] -> S72
	['v','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','q'], ['r','r'], ['s','t'], ['u','u'], ['v','z']}

S29{
	repeated : 'r' • 'e' 'p' 'e' 'a' 't' 'e' 'd'
	reserved : 'r' • 'e' 's' 'e' 'r' 'v' 'e' 'd'
	rpc : 'r' • 'p' 'c'
	returns : 'r' • 'e' 't' 'u' 'r' 'n' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S73
	['f','o'] -> S17
	['p','p'] -> S74
	['q','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','o'], ['p','p'], ['q','z']}

S30{
	syntax : 's' • 'y' 'n' 't' 'a' 'x'
	sint32 : 's' • 'i' 'n' 't' '3' '2'
	sint64 : 's' • 'i' 'n' 't' '6' '4'
	sfixed32 : 's' • 'f' 'i' 'x' 'e' 'd' '3' '2'
	sfixed64 : 's' • 'f' 'i' 'x' 'e' 'd' '6' '4'
	string : 's' • 't' 'r' 'i' 'n' 'g'
	service : 's' • 'e' 'r' 'v' 'i' 'c' 'e'
	stream : 's' • 't' 'r' 'e' 'a' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S75
	['f','f'] -> S76
	['g','h'] -> S17
	['i','i'] -> S77
	['j','s'] -> S17
	['t','t'] -> S78
	['u','x'] -> S17
	['y','y'] -> S79
	['z','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','f'], ['g','h'], ['i','i'], ['j','s'], ['t','t'], ['u','x'], ['y','y'], ['z','z']}

S31{
	to : 't' • 'o'
	_boolLit : 't' • 'r' 'u' 'e' | 'f' 'a' 'l' 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S80
	['p','q'] -> S17
	['r','r'] -> S81
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','q'], ['r','r'], ['s','z']}

S32{
	uint32 : 'u' • 'i' 'n' 't' '3' '2'
	uint64 : 'u' • 'i' 'n' 't' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','h'] -> S17
	['i','i'] -> S82
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','h'], ['i','i'], ['j','z']}

S33{
	weak : 'w' • 'e' 'a' 'k'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S83
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S34{
	{ : '{' •
}
Transitions:
Action: Accept("{")
Symbols classes: {}

S35{
	} : '}' •
}
Transitions:
Action: Accept("}")
Symbols classes: {}

S36{
	_strLit : ((''' {_charValue} ''') | ('"' {_charValue} '"')) •
	strLit : _strLit •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
}
Transitions:
Action: Accept("strLit")
Symbols classes: {}

S37{
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | • '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | • ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | • '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | • 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | • 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | • 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | • 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | • 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | • 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' (• 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : '\' • _octalDigit _octalDigit _octalDigit
	_hexEscape : '\' ('x' | • 'X') _hexDigit _hexDigit
	_hexEscape : '\' (• 'x' | 'X') _hexDigit _hexDigit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['"','"'] -> S84
	[''','''] -> S84
	['0','7'] -> S85
	['X','X'] -> S86
	['\','\'] -> S84
	['a','a'] -> S84
	['b','b'] -> S84
	['f','f'] -> S84
	['n','n'] -> S84
	['r','r'] -> S84
	['t','t'] -> S84
	['v','v'] -> S84
	['x','x'] -> S86
Action: nil
Symbols classes: {['"','"'], [''','''], ['0','7'], ['X','X'], ['\','\'], ['a','a'], ['b','b'], ['f','f'], ['n','n'], ['r','r'], ['t','t'], ['v','v'], ['x','x']}

S38{
	_line_comment : ('/' '/' {.} '\n' | '#' {.} '\n') •
	!comment : (_line_comment | _block_comment) •
}
Transitions:
Action: Ignore("!comment")
Symbols classes: {}

S39{
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | • '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | • ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | • '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | • 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | • 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | • 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | 'f' | • 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | 'b' | • 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' ('a' | • 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_charEscape : '\' (• 'a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : '\' • _octalDigit _octalDigit _octalDigit
	_hexEscape : '\' ('x' | • 'X') _hexDigit _hexDigit
	_hexEscape : '\' (• 'x' | 'X') _hexDigit _hexDigit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['"','"'] -> S87
	[''','''] -> S87
	['0','7'] -> S88
	['X','X'] -> S89
	['\','\'] -> S87
	['a','a'] -> S87
	['b','b'] -> S87
	['f','f'] -> S87
	['n','n'] -> S87
	['r','r'] -> S87
	['t','t'] -> S87
	['v','v'] -> S87
	['x','x'] -> S89
Action: nil
Symbols classes: {['"','"'], [''','''], ['0','7'], ['X','X'], ['\','\'], ['a','a'], ['b','b'], ['f','f'], ['n','n'], ['r','r'], ['t','t'], ['v','v'], ['x','x']}

S40{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' • _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S45
Action: nil
Symbols classes: {['0','9']}

S41{
	_hexLit : '0' ('x' | • 'X') _hexDigit {_hexDigit}
	_hexLit : '0' (• 'x' | 'X') _hexDigit {_hexDigit}
	_octalLit : '0' {_octalDigit} •
	_octalLit : '0' {• _octalDigit}
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimalDigit :  '0'-'9' •
	_intLit : _decimalLit | _octalLit | • _hexLit
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_octalDigit : •  '0'-'7'
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','7'] -> S90
	['8','9'] -> S42
	['E','E'] -> S51
	['X','X'] -> S91
	['e','e'] -> S51
	['x','x'] -> S91
Action: Accept("constant")
Symbols classes: {['.','.'], ['0','7'], ['8','9'], ['E','E'], ['X','X'], ['e','e'], ['x','x']}

S42{
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimalDigit :  '0'-'9' •
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : • _decimalLit | _octalLit | _hexLit
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','9'] -> S42
	['E','E'] -> S51
	['e','e'] -> S51
Action: Accept("constant")
Symbols classes: {['.','.'], ['0','9'], ['E','E'], ['e','e']}

S43{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' • 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
}
Transitions:
	['n','n'] -> S92
Action: nil
Symbols classes: {['n','n']}

S44{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' • 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
}
Transitions:
	['a','a'] -> S93
Action: nil
Symbols classes: {['a','a']}

S45{
	_decimalDigit :  '0'-'9' •
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [• _exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' • _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['0','9'] -> S45
	['E','E'] -> S94
	['e','e'] -> S94
Action: Accept("constant")
Symbols classes: {['0','9'], ['E','E'], ['e','e']}

S46{
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_messageName : • _ident
	_enumName : • _ident
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S95
	['0','9'] -> S96
	['A','Z'] -> S46
	['_','_'] -> S97
	['a','z'] -> S46
Action: Accept("messageType")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S47{
	_block_comment : '/' '*' {. | '*'} • '*' '/'
	_block_comment : '/' '*' {. | • '*'} '*' '/'
	_block_comment : '/' '*' {• . | '*'} '*' '/'
	!comment : _line_comment | • _block_comment
}
Transitions:
	['*','*'] -> S98
. -> S47
Action: nil
Symbols classes: {['*','*']}

S48{
	_line_comment : '/' '/' {.} • '\n' | '#' {.} '\n'
	_line_comment : '/' '/' {• .} '\n' | '#' {.} '\n'
	!comment : • _line_comment | _block_comment
}
Transitions:
	['\n','\n'] -> S38
. -> S48
Action: nil
Symbols classes: {['\n','\n']}

S49{
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [• _exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [• _decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S99
	['E','E'] -> S100
	['e','e'] -> S100
Action: Accept("constant")
Symbols classes: {['0','9'], ['E','E'], ['e','e']}

S50{
	_octalDigit :  '0'-'7' •
	_decimalDigit :  '0'-'9' •
	_octalLit : '0' {_octalDigit} •
	_octalLit : '0' {• _octalDigit}
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	intLit : _intLit •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	intLit : • _intLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_octalDigit : •  '0'-'7'
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','7'] -> S50
	['8','9'] -> S12
	['E','E'] -> S51
	['e','e'] -> S51
Action: Accept("intLit")
Symbols classes: {['.','.'], ['0','7'], ['8','9'], ['E','E'], ['e','e']}

S51{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_exponent : ('e' | 'E') ['+' | • '-'] _decimals
	_exponent : ('e' | 'E') [• '+' | '-'] _decimals
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['+','+'] -> S101
	['-','-'] -> S101
	['0','9'] -> S102
Action: nil
Symbols classes: {['+','+'], ['-','-'], ['0','9']}

S52{
	_hexLit : '0' ('x' | 'X') • _hexDigit {_hexDigit}
	_intLit : _decimalLit | _octalLit | • _hexLit
	intLit : • _intLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S103
	['A','F'] -> S103
	['a','f'] -> S103
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S53{
	messageType : ['.'] {_ident '.'} • _messageName
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : _ident {'.' • _ident}
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_messageName : • _ident
	_ident : • _letter {_letter | _decimalDigit | '_'}
	_enumName : • _ident
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['A','Z'] -> S104
	['a','z'] -> S104
Action: nil
Symbols classes: {['A','Z'], ['a','z']}

S54{
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S55{
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S56{
	bool : 'b' 'o' • 'o' 'l'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S105
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S57{
	bytes : 'b' 'y' • 't' 'e' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S106
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S58{
	double : 'd' 'o' • 'u' 'b' 'l' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','t'] -> S17
	['u','u'] -> S107
	['v','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','t'], ['u','u'], ['v','z']}

S59{
	enum : 'e' 'n' • 'u' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','t'] -> S17
	['u','u'] -> S108
	['v','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','t'], ['u','u'], ['v','z']}

S60{
	_boolLit : 't' 'r' 'u' 'e' | 'f' 'a' • 'l' 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','k'] -> S17
	['l','l'] -> S109
	['m','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','k'], ['l','l'], ['m','z']}

S61{
	fixed32 : 'f' 'i' • 'x' 'e' 'd' '3' '2'
	fixed64 : 'f' 'i' • 'x' 'e' 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','w'] -> S17
	['x','x'] -> S110
	['y','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','w'], ['x','x'], ['y','z']}

S62{
	float : 'f' 'l' • 'o' 'a' 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S111
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S63{
	import : 'i' 'm' • 'p' 'o' 'r' 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','o'] -> S17
	['p','p'] -> S112
	['q','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','o'], ['p','p'], ['q','z']}

S64{
	int32 : 'i' 'n' • 't' '3' '2'
	int64 : 'i' 'n' • 't' '6' '4'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' • 'f' | 'n' 'a' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','e'] -> S17
	['f','f'] -> S113
	['g','s'] -> S17
	['t','t'] -> S114
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','e'], ['f','f'], ['g','s'], ['t','t'], ['u','z']}

S65{
	map : 'm' 'a' • 'p'
	max : 'm' 'a' • 'x'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','o'] -> S17
	['p','p'] -> S115
	['q','w'] -> S17
	['x','x'] -> S116
	['y','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','o'], ['p','p'], ['q','w'], ['x','x'], ['y','z']}

S66{
	message : 'm' 'e' • 's' 's' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','r'] -> S17
	['s','s'] -> S117
	['t','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','r'], ['s','s'], ['t','z']}

S67{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' • 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S113
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S68{
	oneof : 'o' 'n' • 'e' 'o' 'f'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S118
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S69{
	option : 'o' 'p' • 't' 'i' 'o' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S119
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S70{
	package : 'p' 'a' • 'c' 'k' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','b'] -> S17
	['c','c'] -> S120
	['d','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','b'], ['c','c'], ['d','z']}

S71{
	proto3 : 'p' 'r' • 'o' 't' 'o' '3'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S121
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S72{
	public : 'p' 'u' • 'b' 'l' 'i' 'c'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S17
	['b','b'] -> S122
	['c','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','b'], ['c','z']}

S73{
	repeated : 'r' 'e' • 'p' 'e' 'a' 't' 'e' 'd'
	reserved : 'r' 'e' • 's' 'e' 'r' 'v' 'e' 'd'
	returns : 'r' 'e' • 't' 'u' 'r' 'n' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','o'] -> S17
	['p','p'] -> S123
	['q','r'] -> S17
	['s','s'] -> S124
	['t','t'] -> S125
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','o'], ['p','p'], ['q','r'], ['s','s'], ['t','t'], ['u','z']}

S74{
	rpc : 'r' 'p' • 'c'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','b'] -> S17
	['c','c'] -> S126
	['d','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','b'], ['c','c'], ['d','z']}

S75{
	service : 's' 'e' • 'r' 'v' 'i' 'c' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','q'] -> S17
	['r','r'] -> S127
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','q'], ['r','r'], ['s','z']}

S76{
	sfixed32 : 's' 'f' • 'i' 'x' 'e' 'd' '3' '2'
	sfixed64 : 's' 'f' • 'i' 'x' 'e' 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','h'] -> S17
	['i','i'] -> S128
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','h'], ['i','i'], ['j','z']}

S77{
	sint32 : 's' 'i' • 'n' 't' '3' '2'
	sint64 : 's' 'i' • 'n' 't' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S129
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S78{
	string : 's' 't' • 'r' 'i' 'n' 'g'
	stream : 's' 't' • 'r' 'e' 'a' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','q'] -> S17
	['r','r'] -> S130
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','q'], ['r','r'], ['s','z']}

S79{
	syntax : 's' 'y' • 'n' 't' 'a' 'x'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S131
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S80{
	to : 't' 'o' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("to")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S81{
	_boolLit : 't' 'r' • 'u' 'e' | 'f' 'a' 'l' 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','t'] -> S17
	['u','u'] -> S132
	['v','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','t'], ['u','u'], ['v','z']}

S82{
	uint32 : 'u' 'i' • 'n' 't' '3' '2'
	uint64 : 'u' 'i' • 'n' 't' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S133
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S83{
	weak : 'w' 'e' • 'a' 'k'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S134
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S84{
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"') •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} ''') | ('"' {_charValue} • '"')
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	['"','"'] -> S36
	['\','\'] -> S37
Action: nil
Symbols classes: {['"','"'], ['\','\']}

S85{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit • _octalDigit _octalDigit
	_charValue : _hexEscape | • _octEscape | _charEscape
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['0','7'] -> S135
Action: nil
Symbols classes: {['0','7']}

S86{
	_hexEscape : '\' ('x' | 'X') • _hexDigit _hexDigit
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S136
	['A','F'] -> S136
	['a','f'] -> S136
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S87{
	_charEscape : '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"') •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} • ''') | ('"' {_charValue} '"')
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	[''','''] -> S36
	['\','\'] -> S39
Action: nil
Symbols classes: {[''','''], ['\','\']}

S88{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit • _octalDigit _octalDigit
	_charValue : _hexEscape | • _octEscape | _charEscape
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['0','7'] -> S137
Action: nil
Symbols classes: {['0','7']}

S89{
	_hexEscape : '\' ('x' | 'X') • _hexDigit _hexDigit
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S138
	['A','F'] -> S138
	['a','f'] -> S138
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S90{
	_octalDigit :  '0'-'7' •
	_decimalDigit :  '0'-'9' •
	_octalLit : '0' {_octalDigit} •
	_octalLit : '0' {• _octalDigit}
	_decimalLit : ( '0'-'9') {_decimalDigit} •
	_decimalLit : ( '0'-'9') {• _decimalDigit}
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | • _octalLit | _hexLit
	_intLit : • _decimalLit | _octalLit | _hexLit
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals • '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [_decimals] [_exponent] | • _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (• _decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_octalDigit : •  '0'-'7'
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['.','.'] -> S49
	['0','7'] -> S90
	['8','9'] -> S42
	['E','E'] -> S51
	['e','e'] -> S51
Action: Accept("constant")
Symbols classes: {['.','.'], ['0','7'], ['8','9'], ['E','E'], ['e','e']}

S91{
	_hexLit : '0' ('x' | 'X') • _hexDigit {_hexDigit}
	_intLit : _decimalLit | _octalLit | • _hexLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S139
	['A','F'] -> S139
	['a','f'] -> S139
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S92{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' • 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
}
Transitions:
	['f','f'] -> S140
Action: nil
Symbols classes: {['f','f']}

S93{
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' • 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
}
Transitions:
	['n','n'] -> S140
Action: nil
Symbols classes: {['n','n']}

S94{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_exponent : ('e' | 'E') ['+' | • '-'] _decimals
	_exponent : ('e' | 'E') [• '+' | '-'] _decimals
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [• _exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['+','+'] -> S141
	['-','-'] -> S141
	['0','9'] -> S142
Action: nil
Symbols classes: {['+','+'], ['-','-'], ['0','9']}

S95{
	messageType : ['.'] {_ident '.'} • _messageName
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	enumType : ['.'] {• _ident '.'} _enumName
	_messageName : • _ident
	_ident : • _letter {_letter | _decimalDigit | '_'}
	_enumName : • _ident
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['A','Z'] -> S46
	['a','z'] -> S46
Action: nil
Symbols classes: {['A','Z'], ['a','z']}

S96{
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_messageName : • _ident
	_enumName : • _ident
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S95
	['0','9'] -> S96
	['A','Z'] -> S46
	['_','_'] -> S97
	['a','z'] -> S46
Action: Accept("messageType")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S97{
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_messageName : • _ident
	_enumName : • _ident
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S95
	['0','9'] -> S96
	['A','Z'] -> S46
	['_','_'] -> S97
	['a','z'] -> S46
Action: Accept("messageType")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S98{
	_block_comment : '/' '*' {. | '*'} '*' • '/'
	_block_comment : '/' '*' {. | '*'} • '*' '/'
	_block_comment : '/' '*' {. | • '*'} '*' '/'
	_block_comment : '/' '*' {• . | '*'} '*' '/'
	!comment : _line_comment | • _block_comment
}
Transitions:
	['*','*'] -> S98
	['/','/'] -> S143
. -> S47
Action: nil
Symbols classes: {['*','*'], ['/','/']}

S99{
	_decimalDigit :  '0'-'9' •
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [• _exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	_floatLit : (_decimals '.' [• _decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
	_exponent : ('e' | • 'E') ['+' | '-'] _decimals
	_exponent : (• 'e' | 'E') ['+' | '-'] _decimals
}
Transitions:
	['0','9'] -> S99
	['E','E'] -> S100
	['e','e'] -> S100
Action: Accept("constant")
Symbols classes: {['0','9'], ['E','E'], ['e','e']}

S100{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_exponent : ('e' | 'E') ['+' | • '-'] _decimals
	_exponent : ('e' | 'E') [• '+' | '-'] _decimals
	_floatLit : (_decimals '.' [_decimals] [• _exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['+','+'] -> S144
	['-','-'] -> S144
	['0','9'] -> S145
Action: nil
Symbols classes: {['+','+'], ['-','-'], ['0','9']}

S101{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S102
Action: nil
Symbols classes: {['0','9']}

S102{
	_decimalDigit :  '0'-'9' •
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_exponent : ('e' | 'E') ['+' | '-'] _decimals •
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals • _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S102
Action: Accept("constant")
Symbols classes: {['0','9']}

S103{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexLit : '0' ('x' | 'X') _hexDigit {_hexDigit} •
	_hexLit : '0' ('x' | 'X') _hexDigit {• _hexDigit}
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | _octalLit | • _hexLit
	intLit : _intLit •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	intLit : • _intLit
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S103
	['A','F'] -> S103
	['a','f'] -> S103
Action: Accept("intLit")
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S104{
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : _ident {'.' • _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S146
	['A','Z'] -> S104
	['_','_'] -> S147
	['a','z'] -> S104
Action: Accept("fullIdent")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S105{
	bool : 'b' 'o' 'o' • 'l'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','k'] -> S17
	['l','l'] -> S148
	['m','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','k'], ['l','l'], ['m','z']}

S106{
	bytes : 'b' 'y' 't' • 'e' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S149
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S107{
	double : 'd' 'o' 'u' • 'b' 'l' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S17
	['b','b'] -> S150
	['c','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','b'], ['c','z']}

S108{
	enum : 'e' 'n' 'u' • 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','l'] -> S17
	['m','m'] -> S151
	['n','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','l'], ['m','m'], ['n','z']}

S109{
	_boolLit : 't' 'r' 'u' 'e' | 'f' 'a' 'l' • 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','r'] -> S17
	['s','s'] -> S152
	['t','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','r'], ['s','s'], ['t','z']}

S110{
	fixed32 : 'f' 'i' 'x' • 'e' 'd' '3' '2'
	fixed64 : 'f' 'i' 'x' • 'e' 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S153
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S111{
	float : 'f' 'l' 'o' • 'a' 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S154
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S112{
	import : 'i' 'm' 'p' • 'o' 'r' 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S155
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S113{
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S114{
	int32 : 'i' 'n' 't' • '3' '2'
	int64 : 'i' 'n' 't' • '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S156
	['4','5'] -> S54
	['6','6'] -> S157
	['7','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','5'], ['6','6'], ['7','9'], ['A','Z'], ['_','_'], ['a','z']}

S115{
	map : 'm' 'a' 'p' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("map")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S116{
	max : 'm' 'a' 'x' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("max")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S117{
	message : 'm' 'e' 's' • 's' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','r'] -> S17
	['s','s'] -> S158
	['t','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','r'], ['s','s'], ['t','z']}

S118{
	oneof : 'o' 'n' 'e' • 'o' 'f'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S159
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S119{
	option : 'o' 'p' 't' • 'i' 'o' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','h'] -> S17
	['i','i'] -> S160
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','h'], ['i','i'], ['j','z']}

S120{
	package : 'p' 'a' 'c' • 'k' 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','j'] -> S17
	['k','k'] -> S161
	['l','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','j'], ['k','k'], ['l','z']}

S121{
	proto3 : 'p' 'r' 'o' • 't' 'o' '3'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S162
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S122{
	public : 'p' 'u' 'b' • 'l' 'i' 'c'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','k'] -> S17
	['l','l'] -> S163
	['m','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','k'], ['l','l'], ['m','z']}

S123{
	repeated : 'r' 'e' 'p' • 'e' 'a' 't' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S164
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S124{
	reserved : 'r' 'e' 's' • 'e' 'r' 'v' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S165
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S125{
	returns : 'r' 'e' 't' • 'u' 'r' 'n' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','t'] -> S17
	['u','u'] -> S166
	['v','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','t'], ['u','u'], ['v','z']}

S126{
	rpc : 'r' 'p' 'c' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("rpc")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S127{
	service : 's' 'e' 'r' • 'v' 'i' 'c' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','u'] -> S17
	['v','v'] -> S167
	['w','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','u'], ['v','v'], ['w','z']}

S128{
	sfixed32 : 's' 'f' 'i' • 'x' 'e' 'd' '3' '2'
	sfixed64 : 's' 'f' 'i' • 'x' 'e' 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','w'] -> S17
	['x','x'] -> S168
	['y','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','w'], ['x','x'], ['y','z']}

S129{
	sint32 : 's' 'i' 'n' • 't' '3' '2'
	sint64 : 's' 'i' 'n' • 't' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S169
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S130{
	string : 's' 't' 'r' • 'i' 'n' 'g'
	stream : 's' 't' 'r' • 'e' 'a' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S170
	['f','h'] -> S17
	['i','i'] -> S171
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','h'], ['i','i'], ['j','z']}

S131{
	syntax : 's' 'y' 'n' • 't' 'a' 'x'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S172
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S132{
	_boolLit : 't' 'r' 'u' • 'e' | 'f' 'a' 'l' 's' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S173
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S133{
	uint32 : 'u' 'i' 'n' • 't' '3' '2'
	uint64 : 'u' 'i' 'n' • 't' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S174
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S134{
	weak : 'w' 'e' 'a' • 'k'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','j'] -> S17
	['k','k'] -> S175
	['l','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','j'], ['k','k'], ['l','z']}

S135{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit _octalDigit • _octalDigit
	_charValue : _hexEscape | • _octEscape | _charEscape
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['0','7'] -> S176
Action: nil
Symbols classes: {['0','7']}

S136{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexEscape : '\' ('x' | 'X') _hexDigit • _hexDigit
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S177
	['A','F'] -> S177
	['a','f'] -> S177
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S137{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit _octalDigit • _octalDigit
	_charValue : _hexEscape | • _octEscape | _charEscape
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_octalDigit : •  '0'-'7'
}
Transitions:
	['0','7'] -> S178
Action: nil
Symbols classes: {['0','7']}

S138{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexEscape : '\' ('x' | 'X') _hexDigit • _hexDigit
	_charValue : • _hexEscape | _octEscape | _charEscape
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S179
	['A','F'] -> S179
	['a','f'] -> S179
Action: nil
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S139{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexLit : '0' ('x' | 'X') _hexDigit {_hexDigit} •
	_hexLit : '0' ('x' | 'X') _hexDigit {• _hexDigit}
	_intLit : (_decimalLit | _octalLit | _hexLit) •
	_intLit : _decimalLit | _octalLit | • _hexLit
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] • _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	_hexDigit :  '0'-'9' |  'A'-'F' | •  'a'-'f'
	_hexDigit :  '0'-'9' | •  'A'-'F' |  'a'-'f'
	_hexDigit : •  '0'-'9' |  'A'-'F' |  'a'-'f'
}
Transitions:
	['0','9'] -> S139
	['A','F'] -> S139
	['a','f'] -> S139
Action: Accept("constant")
Symbols classes: {['0','9'], ['A','F'], ['a','f']}

S140{
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
}
Transitions:
Action: Accept("constant")
Symbols classes: {}

S141{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [• _exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S142
Action: nil
Symbols classes: {['0','9']}

S142{
	_decimalDigit :  '0'-'9' •
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_exponent : ('e' | 'E') ['+' | '-'] _decimals •
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [• _exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S142
Action: Accept("constant")
Symbols classes: {['0','9']}

S143{
	_block_comment : '/' '*' {. | '*'} '*' '/' •
	!comment : (_line_comment | _block_comment) •
}
Transitions:
Action: Ignore("!comment")
Symbols classes: {}

S144{
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : (_decimals '.' [_decimals] [• _exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimals : • _decimalDigit {_decimalDigit}
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S145
Action: nil
Symbols classes: {['0','9']}

S145{
	_decimalDigit :  '0'-'9' •
	_decimals : _decimalDigit {_decimalDigit} •
	_decimals : _decimalDigit {• _decimalDigit}
	_exponent : ('e' | 'E') ['+' | '-'] _decimals •
	_exponent : ('e' | 'E') ['+' | '-'] • _decimals
	_floatLit : ((_decimals '.' [_decimals] [_exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n') •
	_floatLit : (_decimals '.' [_decimals] [• _exponent] | _decimals _exponent | '.' _decimals [_exponent]) | 'i' 'n' 'f' | 'n' 'a' 'n'
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] • _floatLit) | _strLit | _boolLit
	_decimalDigit : •  '0'-'9'
}
Transitions:
	['0','9'] -> S145
Action: Accept("constant")
Symbols classes: {['0','9']}

S146{
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : _ident {'.' • _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S146
	['A','Z'] -> S104
	['_','_'] -> S147
	['a','z'] -> S104
Action: Accept("fullIdent")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S147{
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : _ident {'.' • _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageType : ['.'] {_ident '.'} _messageName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageType : ['.'] {_ident '.'} • _messageName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S146
	['A','Z'] -> S104
	['_','_'] -> S147
	['a','z'] -> S104
Action: Accept("fullIdent")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S148{
	bool : 'b' 'o' 'o' 'l' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("bool")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S149{
	bytes : 'b' 'y' 't' 'e' • 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','r'] -> S17
	['s','s'] -> S180
	['t','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','r'], ['s','s'], ['t','z']}

S150{
	double : 'd' 'o' 'u' 'b' • 'l' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','k'] -> S17
	['l','l'] -> S181
	['m','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','k'], ['l','l'], ['m','z']}

S151{
	enum : 'e' 'n' 'u' 'm' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("enum")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S152{
	_boolLit : 't' 'r' 'u' 'e' | 'f' 'a' 'l' 's' • 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | • _boolLit
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S173
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S153{
	fixed32 : 'f' 'i' 'x' 'e' • 'd' '3' '2'
	fixed64 : 'f' 'i' 'x' 'e' • 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','c'] -> S17
	['d','d'] -> S182
	['e','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','c'], ['d','d'], ['e','z']}

S154{
	float : 'f' 'l' 'o' 'a' • 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S183
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S155{
	import : 'i' 'm' 'p' 'o' • 'r' 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','q'] -> S17
	['r','r'] -> S184
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','q'], ['r','r'], ['s','z']}

S156{
	int32 : 'i' 'n' 't' '3' • '2'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','1'] -> S54
	['2','2'] -> S185
	['3','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','1'], ['2','2'], ['3','9'], ['A','Z'], ['_','_'], ['a','z']}

S157{
	int64 : 'i' 'n' 't' '6' • '4'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','3'] -> S54
	['4','4'] -> S186
	['5','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','3'], ['4','4'], ['5','9'], ['A','Z'], ['_','_'], ['a','z']}

S158{
	message : 'm' 'e' 's' 's' • 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S187
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S159{
	oneof : 'o' 'n' 'e' 'o' • 'f'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','e'] -> S17
	['f','f'] -> S188
	['g','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','e'], ['f','f'], ['g','z']}

S160{
	option : 'o' 'p' 't' 'i' • 'o' 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S189
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S161{
	package : 'p' 'a' 'c' 'k' • 'a' 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S190
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S162{
	proto3 : 'p' 'r' 'o' 't' • 'o' '3'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','n'] -> S17
	['o','o'] -> S191
	['p','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','n'], ['o','o'], ['p','z']}

S163{
	public : 'p' 'u' 'b' 'l' • 'i' 'c'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','h'] -> S17
	['i','i'] -> S192
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','h'], ['i','i'], ['j','z']}

S164{
	repeated : 'r' 'e' 'p' 'e' • 'a' 't' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S193
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S165{
	reserved : 'r' 'e' 's' 'e' • 'r' 'v' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','q'] -> S17
	['r','r'] -> S194
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','q'], ['r','r'], ['s','z']}

S166{
	returns : 'r' 'e' 't' 'u' • 'r' 'n' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','q'] -> S17
	['r','r'] -> S195
	['s','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','q'], ['r','r'], ['s','z']}

S167{
	service : 's' 'e' 'r' 'v' • 'i' 'c' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','h'] -> S17
	['i','i'] -> S196
	['j','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','h'], ['i','i'], ['j','z']}

S168{
	sfixed32 : 's' 'f' 'i' 'x' • 'e' 'd' '3' '2'
	sfixed64 : 's' 'f' 'i' 'x' • 'e' 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S197
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S169{
	sint32 : 's' 'i' 'n' 't' • '3' '2'
	sint64 : 's' 'i' 'n' 't' • '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S198
	['4','5'] -> S54
	['6','6'] -> S199
	['7','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','5'], ['6','6'], ['7','9'], ['A','Z'], ['_','_'], ['a','z']}

S170{
	stream : 's' 't' 'r' 'e' • 'a' 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S200
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S171{
	string : 's' 't' 'r' 'i' • 'n' 'g'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S201
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S172{
	syntax : 's' 'y' 'n' 't' • 'a' 'x'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','a'] -> S202
	['b','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','a'], ['b','z']}

S173{
	_boolLit : ('t' 'r' 'u' 'e' | 'f' 'a' 'l' 's' 'e') •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S174{
	uint32 : 'u' 'i' 'n' 't' • '3' '2'
	uint64 : 'u' 'i' 'n' 't' • '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S203
	['4','5'] -> S54
	['6','6'] -> S204
	['7','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','5'], ['6','6'], ['7','9'], ['A','Z'], ['_','_'], ['a','z']}

S175{
	weak : 'w' 'e' 'a' 'k' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("weak")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S176{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit _octalDigit _octalDigit •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} ''') | ('"' {_charValue} • '"')
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	['"','"'] -> S36
	['\','\'] -> S37
Action: nil
Symbols classes: {['"','"'], ['\','\']}

S177{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexEscape : '\' ('x' | 'X') _hexDigit _hexDigit •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} ''') | ('"' {_charValue} • '"')
	_strLit : (''' {_charValue} ''') | ('"' {• _charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	['"','"'] -> S36
	['\','\'] -> S37
Action: nil
Symbols classes: {['"','"'], ['\','\']}

S178{
	_octalDigit :  '0'-'7' •
	_octEscape : '\' _octalDigit _octalDigit _octalDigit •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} • ''') | ('"' {_charValue} '"')
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	[''','''] -> S36
	['\','\'] -> S39
Action: nil
Symbols classes: {[''','''], ['\','\']}

S179{
	_hexDigit : ( '0'-'9' |  'A'-'F' |  'a'-'f') •
	_hexEscape : '\' ('x' | 'X') _hexDigit _hexDigit •
	_charValue : (_hexEscape | _octEscape | _charEscape) •
	_strLit : (''' {_charValue} • ''') | ('"' {_charValue} '"')
	_strLit : (''' {• _charValue} ''') | ('"' {_charValue} '"')
	strLit : • _strLit
	constant : _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | • _strLit | _boolLit
	_charValue : _hexEscape | _octEscape | • _charEscape
	_charValue : _hexEscape | • _octEscape | _charEscape
	_charValue : • _hexEscape | _octEscape | _charEscape
	_charEscape : • '\' ('a' | 'b' | 'f' | 'n' | 'r' | 't' | 'v' | '\' | ''' | '"')
	_octEscape : • '\' _octalDigit _octalDigit _octalDigit
	_hexEscape : • '\' ('x' | 'X') _hexDigit _hexDigit
}
Transitions:
	[''','''] -> S36
	['\','\'] -> S39
Action: nil
Symbols classes: {[''','''], ['\','\']}

S180{
	bytes : 'b' 'y' 't' 'e' 's' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("bytes")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S181{
	double : 'd' 'o' 'u' 'b' 'l' • 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S205
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S182{
	fixed32 : 'f' 'i' 'x' 'e' 'd' • '3' '2'
	fixed64 : 'f' 'i' 'x' 'e' 'd' • '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S206
	['4','5'] -> S54
	['6','6'] -> S207
	['7','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','5'], ['6','6'], ['7','9'], ['A','Z'], ['_','_'], ['a','z']}

S183{
	float : 'f' 'l' 'o' 'a' 't' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("float")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S184{
	import : 'i' 'm' 'p' 'o' 'r' • 't'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S208
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S185{
	int32 : 'i' 'n' 't' '3' '2' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("int32")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S186{
	int64 : 'i' 'n' 't' '6' '4' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("int64")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S187{
	message : 'm' 'e' 's' 's' 'a' • 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','f'] -> S17
	['g','g'] -> S209
	['h','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','f'], ['g','g'], ['h','z']}

S188{
	oneof : 'o' 'n' 'e' 'o' 'f' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("oneof")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S189{
	option : 'o' 'p' 't' 'i' 'o' • 'n'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S210
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S190{
	package : 'p' 'a' 'c' 'k' 'a' • 'g' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','f'] -> S17
	['g','g'] -> S211
	['h','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','f'], ['g','g'], ['h','z']}

S191{
	proto3 : 'p' 'r' 'o' 't' 'o' • '3'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S212
	['4','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','9'], ['A','Z'], ['_','_'], ['a','z']}

S192{
	public : 'p' 'u' 'b' 'l' 'i' • 'c'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','b'] -> S17
	['c','c'] -> S213
	['d','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','b'], ['c','c'], ['d','z']}

S193{
	repeated : 'r' 'e' 'p' 'e' 'a' • 't' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','s'] -> S17
	['t','t'] -> S214
	['u','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','s'], ['t','t'], ['u','z']}

S194{
	reserved : 'r' 'e' 's' 'e' 'r' • 'v' 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','u'] -> S17
	['v','v'] -> S215
	['w','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','u'], ['v','v'], ['w','z']}

S195{
	returns : 'r' 'e' 't' 'u' 'r' • 'n' 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','m'] -> S17
	['n','n'] -> S216
	['o','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','m'], ['n','n'], ['o','z']}

S196{
	service : 's' 'e' 'r' 'v' 'i' • 'c' 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','b'] -> S17
	['c','c'] -> S217
	['d','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','b'], ['c','c'], ['d','z']}

S197{
	sfixed32 : 's' 'f' 'i' 'x' 'e' • 'd' '3' '2'
	sfixed64 : 's' 'f' 'i' 'x' 'e' • 'd' '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','c'] -> S17
	['d','d'] -> S218
	['e','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','c'], ['d','d'], ['e','z']}

S198{
	sint32 : 's' 'i' 'n' 't' '3' • '2'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','1'] -> S54
	['2','2'] -> S219
	['3','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','1'], ['2','2'], ['3','9'], ['A','Z'], ['_','_'], ['a','z']}

S199{
	sint64 : 's' 'i' 'n' 't' '6' • '4'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','3'] -> S54
	['4','4'] -> S220
	['5','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','3'], ['4','4'], ['5','9'], ['A','Z'], ['_','_'], ['a','z']}

S200{
	stream : 's' 't' 'r' 'e' 'a' • 'm'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','l'] -> S17
	['m','m'] -> S221
	['n','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','l'], ['m','m'], ['n','z']}

S201{
	string : 's' 't' 'r' 'i' 'n' • 'g'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','f'] -> S17
	['g','g'] -> S222
	['h','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','f'], ['g','g'], ['h','z']}

S202{
	syntax : 's' 'y' 'n' 't' 'a' • 'x'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','w'] -> S17
	['x','x'] -> S223
	['y','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','w'], ['x','x'], ['y','z']}

S203{
	uint32 : 'u' 'i' 'n' 't' '3' • '2'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','1'] -> S54
	['2','2'] -> S224
	['3','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','1'], ['2','2'], ['3','9'], ['A','Z'], ['_','_'], ['a','z']}

S204{
	uint64 : 'u' 'i' 'n' 't' '6' • '4'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','3'] -> S54
	['4','4'] -> S225
	['5','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','3'], ['4','4'], ['5','9'], ['A','Z'], ['_','_'], ['a','z']}

S205{
	double : 'd' 'o' 'u' 'b' 'l' 'e' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("double")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S206{
	fixed32 : 'f' 'i' 'x' 'e' 'd' '3' • '2'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','1'] -> S54
	['2','2'] -> S226
	['3','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','1'], ['2','2'], ['3','9'], ['A','Z'], ['_','_'], ['a','z']}

S207{
	fixed64 : 'f' 'i' 'x' 'e' 'd' '6' • '4'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','3'] -> S54
	['4','4'] -> S227
	['5','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','3'], ['4','4'], ['5','9'], ['A','Z'], ['_','_'], ['a','z']}

S208{
	import : 'i' 'm' 'p' 'o' 'r' 't' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("import")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S209{
	message : 'm' 'e' 's' 's' 'a' 'g' • 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S228
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S210{
	option : 'o' 'p' 't' 'i' 'o' 'n' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("option")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S211{
	package : 'p' 'a' 'c' 'k' 'a' 'g' • 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S229
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S212{
	proto3 : 'p' 'r' 'o' 't' 'o' '3' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("proto3")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S213{
	public : 'p' 'u' 'b' 'l' 'i' 'c' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("public")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S214{
	repeated : 'r' 'e' 'p' 'e' 'a' 't' • 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S230
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S215{
	reserved : 'r' 'e' 's' 'e' 'r' 'v' • 'e' 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S231
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S216{
	returns : 'r' 'e' 't' 'u' 'r' 'n' • 's'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','r'] -> S17
	['s','s'] -> S232
	['t','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','r'], ['s','s'], ['t','z']}

S217{
	service : 's' 'e' 'r' 'v' 'i' 'c' • 'e'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','d'] -> S17
	['e','e'] -> S233
	['f','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','d'], ['e','e'], ['f','z']}

S218{
	sfixed32 : 's' 'f' 'i' 'x' 'e' 'd' • '3' '2'
	sfixed64 : 's' 'f' 'i' 'x' 'e' 'd' • '6' '4'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','2'] -> S54
	['3','3'] -> S234
	['4','5'] -> S54
	['6','6'] -> S235
	['7','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','2'], ['3','3'], ['4','5'], ['6','6'], ['7','9'], ['A','Z'], ['_','_'], ['a','z']}

S219{
	sint32 : 's' 'i' 'n' 't' '3' '2' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("sint32")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S220{
	sint64 : 's' 'i' 'n' 't' '6' '4' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("sint64")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S221{
	stream : 's' 't' 'r' 'e' 'a' 'm' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("stream")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S222{
	string : 's' 't' 'r' 'i' 'n' 'g' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("string")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S223{
	syntax : 's' 'y' 'n' 't' 'a' 'x' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("syntax")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S224{
	uint32 : 'u' 'i' 'n' 't' '3' '2' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("uint32")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S225{
	uint64 : 'u' 'i' 'n' 't' '6' '4' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("uint64")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S226{
	fixed32 : 'f' 'i' 'x' 'e' 'd' '3' '2' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("fixed32")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S227{
	fixed64 : 'f' 'i' 'x' 'e' 'd' '6' '4' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("fixed64")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S228{
	message : 'm' 'e' 's' 's' 'a' 'g' 'e' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("message")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S229{
	package : 'p' 'a' 'c' 'k' 'a' 'g' 'e' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("package")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S230{
	repeated : 'r' 'e' 'p' 'e' 'a' 't' 'e' • 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','c'] -> S17
	['d','d'] -> S236
	['e','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','c'], ['d','d'], ['e','z']}

S231{
	reserved : 'r' 'e' 's' 'e' 'r' 'v' 'e' • 'd'
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','c'] -> S17
	['d','d'] -> S237
	['e','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','c'], ['d','d'], ['e','z']}

S232{
	returns : 'r' 'e' 't' 'u' 'r' 'n' 's' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("returns")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S233{
	service : 's' 'e' 'r' 'v' 'i' 'c' 'e' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("service")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S234{
	sfixed32 : 's' 'f' 'i' 'x' 'e' 'd' '3' • '2'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','1'] -> S54
	['2','2'] -> S238
	['3','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','1'], ['2','2'], ['3','9'], ['A','Z'], ['_','_'], ['a','z']}

S235{
	sfixed64 : 's' 'f' 'i' 'x' 'e' 'd' '6' • '4'
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','3'] -> S54
	['4','4'] -> S239
	['5','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("ident")
Symbols classes: {['.','.'], ['0','3'], ['4','4'], ['5','9'], ['A','Z'], ['_','_'], ['a','z']}

S236{
	repeated : 'r' 'e' 'p' 'e' 'a' 't' 'e' 'd' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("repeated")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S237{
	reserved : 'r' 'e' 's' 'e' 'r' 'v' 'e' 'd' •
	_letter : ( 'A'-'Z' |  'a'-'z') •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("reserved")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S238{
	sfixed32 : 's' 'f' 'i' 'x' 'e' 'd' '3' '2' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("sfixed32")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

S239{
	sfixed64 : 's' 'f' 'i' 'x' 'e' 'd' '6' '4' •
	_decimalDigit :  '0'-'9' •
	_ident : _letter {_letter | _decimalDigit | '_'} •
	_ident : _letter {_letter | _decimalDigit | • '_'}
	_ident : _letter {_letter | • _decimalDigit | '_'}
	_ident : _letter {• _letter | _decimalDigit | '_'}
	ident : _ident •
	fieldName : _ident •
	oneofName : _ident •
	mapName : _ident •
	serviceName : _ident •
	rpcName : _ident •
	messageType : ['.'] {_ident • '.'} _messageName
	enumType : ['.'] {_ident • '.'} _enumName
	_fullIdent : _ident {'.' _ident} •
	_fullIdent : _ident {• '.' _ident}
	_messageName : _ident •
	_enumName : _ident •
	ident : • _ident
	fieldName : • _ident
	oneofName : • _ident
	mapName : • _ident
	serviceName : • _ident
	rpcName : • _ident
	messageType : ['.'] {• _ident '.'} _messageName
	enumType : ['.'] {• _ident '.'} _enumName
	_fullIdent : • _ident {'.' _ident}
	_messageName : • _ident
	_enumName : • _ident
	fullIdent : _fullIdent •
	constant : (_fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit) •
	fullIdent : • _fullIdent
	constant : • _fullIdent | (['-' | '+'] _intLit) | (['-' | '+'] _floatLit) | _strLit | _boolLit
	messageName : _messageName •
	messageType : ['.'] {_ident '.'} _messageName •
	enumName : _enumName •
	enumType : ['.'] {_ident '.'} _enumName •
	messageName : • _messageName
	messageType : ['.'] {_ident '.'} • _messageName
	enumName : • _enumName
	enumType : ['.'] {_ident '.'} • _enumName
	_decimalDigit : •  '0'-'9'
	_letter :  'A'-'Z' | •  'a'-'z'
	_letter : •  'A'-'Z' |  'a'-'z'
}
Transitions:
	['.','.'] -> S53
	['0','9'] -> S54
	['A','Z'] -> S17
	['_','_'] -> S55
	['a','z'] -> S17
Action: Accept("sfixed64")
Symbols classes: {['.','.'], ['0','9'], ['A','Z'], ['_','_'], ['a','z']}

